; ----------------------------------------------------------------------------------------------------------------
;
; CreateFiveHighwayNetworks.job
;
; TP+ script to create five time-of-day specific highway networks to be used in transit skimming and assignment. 
; The five time periods are as follows: (a) early AM, 3 am to 6 am; (b) AM peak period, 6 am to 10 am; (c) midday, 
; 10 am to 3 pm; (d) PM peak period, 3 pm to 7 pm; and, (e) evening, 7 pm to 3 am the next day.  The networks are 
; identical save the following: (i) the reversible lanes on the Golden Gate bridge head southbound in the early AM, AM
; peak period, and midday periods and northbound in the PM and evening periods; (ii) the Caldecott tunnel has 
; X lanes headed westbound in the early AM, AM peak period and midday periods and X lanes headed eastbound in the
; PM peak and evening periods; (iii) the fixed time toll delay links are given time-of-day specific values; (iv) 
; the shared ride toll bypass lanes are either left in place or deleted. 
;
; Input: (1) A highway network containing the following fields: (a) TOLLBOOTH (see SetTolls.job); (b) FFT, free
;            flow travel time for fixed time links (i.e. volume has no impact); (c) LANES, which is the number
;            of travel lanes. 
;
; Output: Five time-of-day-specific highway networks to be used in skimming and assignment. 
;
;
; See also: (1) HwySkims.job, which does the skimming
;           (2) SetTolls.job, which sets the toll values in the network
;
; version:  Travel Model Zed
; authors:  dto (2010 08 10); crf (2013 07)
; revised jef (2016 08 09) to work with cube 6.4
;
; ----------------------------------------------------------------------------------------------------------------

;set fft, and drop off non-hwy links
run pgm = hwynet

;    PAR NODES=10000000

   ; begin with the standard input network
   neti = hwy\mtc_final_network_with_tolls.net

   ; write out to the same name with the added variables   
   neto = hwy\mtc_final_network_with_tolls_fft.net
   
   ;drive links and TAZ/MAZ connectors only
   IF (CNTYPE = 'TAZ' | CNTYPE = 'MAZ') ASSIGNABLE = 1
   IF (ASSIGNABLE = 0 | DRIVE_ACCESS = 0) DELETE
   
   if (FFS > 0)
       FFT = (60.0 / 5280.0) * FEET / FFS ; (60 minutes / 1 hour) * (1 mile / 5280 feet) * (feet) * (miles / hour) => minutes
   else
       FFT = (60.0 / 5280.0) * FEET / 25 ; put a default of 25 mph
   endif
   
endrun

; build a network for each time period
loop period = 1, 5
  
   ; a two letter token is used for each time period
   if (period = 1)   
   
      token_period = 'EA' 
      
      ; turn HOV into free flow
      token_hov_to_freeflow = '; do not turn HOV into free flow'

      ; bridge toll fixed time delay links
      token_benicia_bridge_delay   = '0' 
      token_richmond_bridge_delay  = '0'
      token_carquinez_bridge_delay = '0'
      token_golden_bridge_delay    = '0'      
      token_bay_bridge_delay       = '0'
      token_sanmateo_bridge_delay  = '0'
      token_dumbarton_bridge_delay = '0'
      token_antioch_bridge_delay   = '0'
      
      token_new_bridge_delay       = '0'
  
   elseif (period = 2)   
      token_period = 'AM'
      
       ; do not turn HOV into free flow
      token_hov_to_freeflow = '; do not turn HOV into free flow'
      
      ; bridge toll fixed time delay links
      token_benicia_bridge_delay   = '0' 
      token_richmond_bridge_delay  = '0'
      token_carquinez_bridge_delay = '0'
      token_golden_bridge_delay    = '5'
      token_bay_bridge_delay       = '15'
      token_sanmateo_bridge_delay  = '10'
      token_dumbarton_bridge_delay = '15'
      token_antioch_bridge_delay   = '0'
      
      token_new_bridge_delay       = '10'
  
   elseif (period = 3)   
      token_period = 'MD' 
      
      ; turn HOV into free flow
      token_hov_to_freeflow = '; do not turn HOV into free flow'

      ; bridge toll fixed time delay links
      token_benicia_bridge_delay   = '0' 
      token_richmond_bridge_delay  = '0'
      token_carquinez_bridge_delay = '0'
      token_golden_bridge_delay    = '0'
      token_bay_bridge_delay       = '0'
      token_sanmateo_bridge_delay  = '0'
      token_dumbarton_bridge_delay = '0'
      token_antioch_bridge_delay   = '0'  
      
      token_new_bridge_delay       = '0'
  
   elseif (period = 4)   
      token_period = 'PM'
      
       ; do not turn HOV into free flow
      token_hov_to_freeflow = '; do not turn HOV into free flow'
      
      ; bridge toll fixed time delay links
      token_benicia_bridge_delay   = '0' 
      token_richmond_bridge_delay  = '5'
      token_carquinez_bridge_delay = '5'
      token_golden_bridge_delay    = '0'
      token_bay_bridge_delay       = '5'
      token_sanmateo_bridge_delay  = '5'
      token_dumbarton_bridge_delay = '5'
      token_antioch_bridge_delay   = '0'
      
      token_new_bridge_delay       = '5'
  
   elseif (period = 5)   
      token_period = 'EV'
      
      ; turn HOV into free flow
      token_hov_to_freeflow = '; do not turn HOV into free flow'
      
      ; bridge toll fixed time delay links
      token_benicia_bridge_delay   = '0' 
      token_richmond_bridge_delay  = '0'
      token_carquinez_bridge_delay = '0'
      token_golden_bridge_delay    = '0'
      token_bay_bridge_delay       = '0'
      token_sanmateo_bridge_delay  = '0'
      token_dumbarton_bridge_delay = '0'
      token_antioch_bridge_delay   = '0'
      
      token_new_bridge_delay       = '0'
      
   endif
   
   
   run pgm = hwynet

      ; begin with the input network with tolls added
      neti = hwy\mtc_final_network_with_tolls_fft.net
     
      ; write out to the same name with the added variables   
      neto = hwy\avgload@token_period@.net
      
      ; set the time-period-specific congested times to free-flow times
      CTIM = FFT
      
      ; turn hov lanes off
      @token_hov_to_freeflow@
      
      ; benecia martinez bridge (no shared ride by-pass link)
      if (TOLLBOOTH = 1)
      
         FFT  = @token_benicia_bridge_delay@
         CTIM = @token_benicia_bridge_delay@
         
      endif

      if (TOLLBOOTH = 2)
      
         FFT  = @token_carquinez_bridge_delay@
         CTIM = @token_carquinez_bridge_delay@
      
      endif

      ; richmond san rafael bridge (no shared ride by-pass link)
      if (TOLLBOOTH = 3)
      
         FFT  = @token_richmond_bridge_delay@
         CTIM = @token_richmond_bridge_delay@
      
      endif

      ; golden gate bridge (no shared ride by-pass link)
      if (TOLLBOOTH = 4)
      
         FFT  = @token_golden_bridge_delay@
         CTIM = @token_golden_bridge_delay@
      
      endif

      if (TOLLBOOTH = 5) 
         
         FFT  = @token_bay_bridge_delay@
         CTIM = @token_bay_bridge_delay@ 
         
      endif

      if (TOLLBOOTH = 6) 
      
         FFT  = @token_sanmateo_bridge_delay@
         CTIM = @token_sanmateo_bridge_delay@
      
      endif
      
      if (TOLLBOOTH = 7)
      
         FFT  = @token_dumbarton_bridge_delay@
         CTIM = @token_dumbarton_bridge_delay@
         
      endif
  
      ; antioch bridge (no shared ride by-pass link)
      if (TOLLBOOTH = 8)
      
         FFT  = @token_antioch_bridge_delay@
         CTIM = @token_antioch_bridge_delay@
      
      endif
      
      if (TOLLBOOTH = 10)
      
         FFT  = @token_new_bridge_delay@
         CTIM = @token_new_bridge_delay@
      
      endif
      
        
   endrun
   
endloop ; token_period
